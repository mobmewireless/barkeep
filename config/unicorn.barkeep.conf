# Refer to http://unicorn.bogomips.org/Unicorn/Configurator.html for more info on options
# Refer to http://unicorn.bogomips.org/SIGNALS.html for how to change some of these at runtime

require "./environment.rb"

port = ENV["BARKEEP_PORT"] || 8080
worker_processes (ENV["UNICORN_WORKERS"] || 3).to_i
socket_path = ENV["UNICORN_SOCKET"]

if ENV["RACK_ENV"] == "production"
  listen socket_path, :backlog => 64
else
  listen "/home/mobme/deploy/infrastructure-barkeep/unicorn.sock", :backlog => 64
#  listen port, :tcp_nodelay => true
end

timeout 30

pid ENV["UNICORN_PID_FILE"] || "#{Dir.getwd}/unicorn.pid"

# Log stdout and stderr to files in production.
if ENV["RACK_ENV"] == "production"
  stderr_path("log/unicorn.log")
  stdout_path("log/unicorn.log")
end

# Load the app in the master. This makes startup time faster (because requiring all our gems takes a while and
# so it is only done once in the master).
preload_app true

before_fork do |server, worker|
  # This disconnects all connections in the thread pool. We don't need to worry about reconnecting (sequel
  # reconnects automatically when we try to query again).
  DB.disconnect
end

after_fork do |server, worker|
  # The workers are sharing redis connections after fork; force them to reconnect.
  RedisManager.reconnect
end
